%%%-------------------------------------------------------------------
%%% Problem 2. Even Fibonacci numbers
%%% Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
%%% 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
%%% By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
%%%-------------------------------------------------------------------
-module(problem_2).
-author("akli").

%% API
-export([result/0]).

result() -> even_sum(fibonacci_list(4000000)).

fibonacci_list(Max) -> fibonacci_list([2, 1], Max).

fibonacci_list([Prev, PrevPrev|Rest], Max) when Prev + PrevPrev < Max ->
  fibonacci_list([Prev + PrevPrev, Prev, PrevPrev|Rest], Max);
fibonacci_list(List, _Max) -> List.

even_sum(List) -> lists:foldl(
  fun(Elem, Acc) ->
    if
      Elem rem 2 == 0 -> Acc + Elem;
      Elem rem 2 == 1 -> Acc
    end
  end, 0, List).